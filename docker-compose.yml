version: '3.4'

networks:
  dockerapi-dev:
    driver: bridge

services:

#  shopservice:
#    container_name: shopservice
#    build: ./ShopBack/
#    ports:
#      - "5003:80"
#    environment:
#      DB_CONNECTION_STRING: "host=postgres_image;port=5432;database=blogdb;username=bloguser;password=bloguser"
#      AUTH_Authority: "http://identity_server4/"
#      AUTH_Audience: "api"
#    networks:
#      - dockerapi-dev
#    depends_on:
#      - "postgres_image"
#    restart: on-failure

  shopservice:
    build: ./ShopBack/
    container_name: shopservice
    environment:
      DB_CONNECTION_STRING: "host=postgres_image;port=5432;database=blogdb;username=bloguser;password=bloguser"
      AUTH_Authority: "http://identity_server4/"
      AUTH_Audience: "api"
    networks:
        - dockerapi-dev
    depends_on:
        - "postgres_image"
    restart: on-failure
    ports:
      - "5003:80"
    command: sh -c 'dockerize -wait tcp://postgres_image:5432 -- dotnet Shop.dll'

  postgres_image:
    image: postgres:latest
    container_name: postgres_image
    ports:
      - 5432:5432
    expose:
      - "5432"
    restart: always
    volumes:
      - db_volume:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: "bloguser"
      POSTGRES_PASSWORD: "bloguser"
      POSTGRES_DB: "blogdb"
    networks:
      - dockerapi-dev

  identity_server:
    container_name: identity_server4
    build: ./IdentityServer4/
    ports:
      - 5000:80
    restart: always
    networks:
      - dockerapi-dev

  client:
    container_name: client
    build:
      context: ./ShopFront
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    environment:
      - CHOKIDAR_USEPOLLING=true
    networks:
      - dockerapi-dev
#    command: ["./wait-for-it.sh", "db:54322", "--", "python", "app.py"]
volumes:
  db_volume: